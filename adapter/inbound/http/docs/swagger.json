{
    "swagger": "2.0",
    "info": {
        "description": "Swagger API for Food Service.",
        "title": "Food Swagger API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Roberto Filho",
            "email": "contatorobertobff@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/auth/signup": {
            "post": {
                "description": "Endpoint to register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User registration input",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserInDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.Base"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CreateUserOutDto"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Base"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Base": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/dto.BaseError"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.BaseError": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/errors.ErrorCode"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserInDto": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone_number",
                "username"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserOutDto": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "errors.ErrorCode": {
            "type": "string",
            "enum": [
                "INVALID_INPUT",
                "USER_ALREADY_EXISTS",
                "INTERNAL_SERVER_ERROR",
                "UNAUTHORIZED",
                "FORBIDDEN"
            ],
            "x-enum-varnames": [
                "ErrInvalidInput",
                "ErrUserAlreadyExists",
                "ErrInternalServer",
                "ErrUnauthorized",
                "ErrForbidden"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}